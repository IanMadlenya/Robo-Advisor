<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- <jee:jndi-lookup id="dataSourceSpied" jndi-name="jdbc/orcl"
		resource-ref="true" /> -->
	<jee:jndi-lookup id="dataSourceSpied" jndi-name="jdbc/work"
		resource-ref="true" />
	<!-- resource-ref="true" : server.xml에서 resource 참조 -->

	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL:::" />
			</bean>
		</property>
	</bean>

	<!-- JDBC 기반 트랜잭션 관리자 객체 생성 : 트랜잭션을 관리해주는 역할, dataSource 참조 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Transaction 관리자 객체 정책 설정 : <tx> 태그(네임스페이스) 이용 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes> <!-- 트랜잭션 정책 선언 속성 -->
			<tx:method name="*" propagation="REQUIRED" />
			<!-- name="*" : 지정된 모든 메서드에 트랜잭션 적용 -->
			<!-- propagation="REQUIRED" : 모든 메서드는 트랜잭션을 바탕으로 실행 -->
			<tx:method name="select*" read-only="true" />
			<!-- read-only="true" : 읽기전용 설정(select로 시작하는 메서드는 읽기 전용) -->
		</tx:attributes>
	</tx:advice>

	<!--<aop> 태그 이용 : 트랜잭션이 적용될 포인트컷 지정(적용 대상 메서드 지정) -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* spring.project.service.*Service.*(..))" />
	</aop:config>
	
	<!-- myBatis 환경설정 sqlSession 객체 생성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="/WEB-INF/spring/mybatisConfig.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>		
</beans>